<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:MinecraftLocalizer.Converters"
    xmlns:models="clr-namespace:MinecraftLocalizer.Models">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Styles/Icons/FileIcon.xaml" />
        <ResourceDictionary Source="/Styles/CheckBoxStyle.xaml" />
        <ResourceDictionary Source="/Styles/ToggleButtonStyle.xaml" />
        <ResourceDictionary Source="/Styles/ScrollBarStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:BoolToVisibilityConverter x:Key="BoolToVisibility" />
    <conv:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibility" />

    <Style TargetType="TreeViewItem">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--  Expander  -->
                            <ToggleButton
                                x:Name="Expander"
                                Grid.Column="0"
                                ClickMode="Press"
                                Cursor="Hand"
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{StaticResource ExpandCollapseToggleStyle}"
                                Visibility="{Binding HasItems, Converter={StaticResource BoolToVisibility}}" />

                            <!--  CheckBox  -->
                            <CheckBox
                                x:Name="TheCheckBox"
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                IsChecked="{Binding IsChecked}"
                                Style="{StaticResource CheckBoxStyle}"
                                Visibility="{Binding IsRoot, Converter={StaticResource BoolToVisibility}}" />

                            <!--  Content  -->
                            <Border
                                x:Name="ContentBorder"
                                Grid.Column="2"
                                Margin="5,0,0,0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                SnapsToDevicePixels="true">

                                <StackPanel Orientation="Horizontal">
                                    <ContentControl
                                        x:Name="Icon"
                                        Width="16"
                                        Height="16"
                                        Margin="0,0,5,0"
                                        ContentTemplate="{StaticResource FileIcon}"
                                        Visibility="{Binding HasItems, Converter={StaticResource InverseBoolToVisibility}}" />

                                    <ContentPresenter ContentSource="Header" />
                                </StackPanel>
                            </Border>
                        </Grid>

                        <!--  Child items  -->
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Margin="17,0,0,0"
                            Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibility}}" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsTranslating}" Value="True">
                            <Setter TargetName="ContentBorder" Property="Background" Value="#0C9D57" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="ContentBorder" Property="Background" Value="#60007ACC" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TreeView Style  -->
    <Style x:Key="TreeViewStyle" TargetType="TreeView">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="5,10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" Style="{StaticResource CustomScrollViewerStyle}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DataTemplate  -->
    <HierarchicalDataTemplate DataType="{x:Type models:TreeNodeItem}" ItemsSource="{Binding ChildrenNodes}">
        <TextBlock Text="{Binding FileName}" />
    </HierarchicalDataTemplate>
</ResourceDictionary>